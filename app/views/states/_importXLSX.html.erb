<br>
<label class="btn btn-primary btn-sm">
Browse..<input type="file" id="load_file" hidden onchange="$('#upload-file-info').html(this.files[0].name)">
</label>
<span class='label label-default' id="upload-file-info"></span>
<button type="button" class="btn btn-success btn-sm" onclick="import_XLSX()">Import Excel</button>

<script>
  function import_XLSX(){
    // Obtiene el archivo cargado
    var archivo_seleccionado = document.getElementById("load_file").files;
    var valor_data64 = ""

    // Utilizar la posicion 0 es suficiente
    // contiene todo el archivo
    var fileToLoad = archivo_seleccionado[0];

    // Leer archivo
    var fileReader = new FileReader();

    // onload es ejecutado cuando el  contenido es leído
    fileReader.onload = function(fileLoadedEvent){

      // Contenido en formato base 64
      valor_data64 = fileLoadedEvent.target.result
      valor_data64 = valor_data64.replace("data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,", "").replace("data:application/xlsx;base64,", "")

      // Crear el objeto xlsx
      var objeto_xlsx = xlsx(valor_data64);
      book = objeto_xlsx.worksheets[0].data
      message = ""
      states=[];
      // Filas del excel
      for (var fila = 1; fila < book.length ; fila++) {
        // Columnas del excel
        state={name:book[fila][0].value,country:book[fila][1].value};
        states.push(state)
      }
      $.ajax(
        {
          type:'post',
          url:'/ajax_import_states',
          data:{
            states:states
          }
        }
      )
    }

    // El método readAsDataURL es usado para leer el contenido del
    // especificado Blob o File.
    fileReader.readAsDataURL(fileToLoad);

  }
</script>
